version: 3
schema: public
environmet: HASURA_GRAPHQL_APPLICATION_DB_URL
#List Tracking tables
tables:
  - audit_logs
  - board_details
  - users
  - board_tasks
  - boards
  - encounters
  - orders
  - patients
  - patients_search
  - patients_search_activities
  - results
  - roles
  - tenants
  - user_activities
sources:
  - name: testDB
    kind: postgres
    tables:
# action level permissions. on particular columns/rows with filters
      - table: { schema: public, name: users }
        select_permissions: [{ role: viewer, permission: { columns: '*', filter: { tenant_id: { _eq: 'X-Hasura-Tenant-Id' } }, allow_aggregations: true, limit: 100 } }]
        insert_permissions: [{ role: viewer, permission: { columns: '*', check: {} } }]
        update_permissions: [{ role: viewer, permission: { columns: '*', filter: {} } }]
        delete_permissions: [{ role: viewer, permission: { filter: {} } }]
# role level permissions on a table without filter
roles:
  - name: clerical
    table_permissions: 
      - table: audit_logs
        permissions: { select: true, insert: true, update: true, delete: true }

event_triggers:
  - trigger:
      name: user_sync
      table_name: users
      webhook: http://localhost:3000/api/v1/user
      operations:
        update:
          columns:
            - email
      headers:
        - name: Authorization
          value_from_env: WEBHOOK_SECRET
      retry_conf:
        num_retries: 3
        interval_sec: 15
        timeout_sec: 90

  - trigger:
      name: board_details_sync
      table_name: board_details
      webhook: http://localhost:3000/api/v1/board_details
      headers:
        - name: Authorization
          value_from_env: WEBHOOK_SECRET

  - trigger:
      name: user_client_sync
      table_name: client_users
      webhook: http://localhost:3000/api/v1/user/client_users

  - trigger:
      name: files_sync
      table_name: files
      webhook: http://localhost:3000/api/v1/case/files
      operations:
        update:
          columns:
            - status
      request_transform:
        template_engine: "Kriti"
        version: 2
        query_params:
          workflow: "case"
        body:
          action: "transform"
          template: |
            {
              "op": {{$body.event.op}},
              "data": {{$body.event.data.new}}
            }
